version: "{build}"

init:
  - git config --global core.autocrlf input

environment:
  matrix:
    - QT6: C:\Qt\6.0.1\mingw81_64
      MINGW: C:\Qt\Tools\mingw810_64
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    - QT6: /home/appveyor/Qt/6.0.0/gcc_64
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
    # 6.0.2 not yet available as of 05 March 2021
    # - QT6: C:\Qt\6.0.2\mingw81_64
    #   MINGW: C:\Qt\Tools\mingw810_64
    #   APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019

matrix:
  fast_finish: false

for:
  - matrix:
      only:
        - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004

    build_script:
      - echo Ubuntu build script
      - export PATH=$QT6/bin:$PATH
      - export CMAKE_PREFIX_PATH=$QT6
      - ls -lah $QT6
      - ls -lah $QT6/bin
      - mkdir build
      - cd build
      - cmake -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release --build ..
      - make
      - cd tests
      - ./qtcsv_tests

  - matrix:
      only:
        - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
    build_script:
      - ps: echo Windows build script
      - ps: echo $env:PATH
      - ps: (dir env:)
      - ps: $env:PATH="$env:MINGW\bin;$env:QT6\bin;$env:PATH"
      - ps: $env:QT_LOGGING_RULES="*.debug=true"
      - ps: mkdir build
      - ps: cd build
      # build library and tests
      - ps: cmake --version
      # IGNORE_PATH is a workaround for CMake not wanting sh.exe on PATH for MinGW
      - ps: cmake -G "MinGW Makefiles" -DCMAKE_IGNORE_PATH="C:/Program Files/Git/usr/bin" -DCMAKE_BUILD_TYPE=Release --build ..
      - ps: ls -s
      - ps: mingw32-make
      - ps: cd tests
      - ps: bash.exe -c "./qtcsv_tests.exe"
